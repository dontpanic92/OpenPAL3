# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pr:
  - master

pool:
  vmImage: 'windows-latest'

steps:
- task: PowerShell@2
  displayName: 'Install Vulkan SDK'
  inputs:
    targetType: 'inline'
    script: |
      Invoke-WebRequest https://sdk.lunarg.com/sdk/download/1.2.131.2/windows/VulkanSDK-1.2.131.2-Installer.exe -OutFile $(Agent.TempDirectory)/VulkanSDK.exe
      $(Agent.TempDirectory)/VulkanSDK.exe /S /D=$(Agent.TempDirectory)/VulkanSDK/
      [Environment]::SetEnvironmentVariable("Path", $env:Path + ";$(Agent.TempDirectory)/VulkanSDK/bin", "User")

- task: PowerShell@2
  displayName: 'Install rust'
  inputs:
    targetType: 'inline'
    script: |
      Invoke-WebRequest https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile $(Agent.TempDirectory)/rustup-init.exe
      $(Agent.TempDirectory)/rustup-init.exe -y --default-toolchain nightly-x86_64-pc-windows-msvc

- task: PowerShell@2
  displayName: 'Build'
  inputs:
    targetType: 'inline'
    script: cd openpal3; cargo build --release --verbose

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'tree C:\Rust\.cargo\git\checkouts'
  condition: always()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'openpal3/target/release/openpal3.exe'
    ArtifactName: 'openpal3'
    publishLocation: 'Container'
