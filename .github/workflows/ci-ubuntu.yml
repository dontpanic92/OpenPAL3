name: CI Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  ubuntu-build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install Deps
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.250-jammy.list https://packages.lunarg.com/vulkan/1.3.250/lunarg-vulkan-1.3.250-jammy.list
          sudo apt update
          sudo apt install nasm vulkan-sdk libudev-dev libxcb-shape0-dev libxcb-xfixes0-dev libasound2-dev
          sudo apt install libbs2b-dev liblilv-dev libsratom-dev libsord-dev libserd-dev librubberband-dev libmysofa-dev flite1-dev libfribidi-dev libass-dev libzmq3-dev libgme-dev
          sudo apt install libopenmpt-dev libchromaprint-dev libbluray-dev libgnutls28-dev libssh-dev libvpx-dev libwebp-dev libzvbi-dev libsnappy-dev libcodec2-dev libgsm1-dev libmp3lame-dev libopenjp2-7-dev libopus-dev libshine-dev libspeex-dev libtheora-dev libogg-dev libtwolame-dev libvorbis-dev libwavpack-dev libwebp-dev libx264-dev libx265-dev libxvidcore-dev libsoxr-dev libva-dev libvdpau-dev 
          sudo apt install libdrm-dev ocl-icd-opencl-dev libxv-dev libfuse2
      - name: Install ffmpeg
        run: |
          vcpkg install --triplet=x64-static
          vcpkg integrate install
      - name: Build
        run: cargo build --workspace --release --verbose
      - name: AppImage Packaging
        run: |
          cd target
          wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage
          ./linuxdeploy-x86_64.AppImage --appdir AppDir
          cp ../packaging/AppImage/* ./AppDir/
          cp ./release/yaobow ./AppDir/usr/bin/
          ./linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage
      - uses: actions/upload-artifact@v3
        with:
          name: yaobow-AppImage
          path: target/yaobow-*.AppImage
