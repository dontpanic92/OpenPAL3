# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pr:
  - master

pool:
  vmImage: 'windows-latest'

steps:
- task: PowerShell@2
  displayName: 'Install choco'
  inputs:
    targetType: 'inline'
    script: 'Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(''https://chocolatey.org/install.ps1''))'

- task: PowerShell@2
  displayName: 'Install dependencies'
  inputs:
    targetType: 'inline'
    script: |
      choco install vulkan-sdk
      tree /f C:\VulkanSDK

#- task: PowerShell@2
#  displayName: 'Install Vulkan SDK'
#  inputs:
#    targetType: 'inline'
#    script: |
#      Invoke-WebRequest https://sdk.lunarg.com/sdk/download/1.2.131.2/windows/VulkanSDK-1.2.131.2-Installer.exe -OutFile $(Agent.TempDirectory)\VulkanSDK-Installer.exe
#      $(Agent.TempDirectory)\VulkanSDK-Installer.exe /S

- task: PowerShell@2
  displayName: 'Install rust'
  inputs:
    targetType: 'inline'
    script: |
      echo $env:Path
      glslc
      Invoke-WebRequest https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile $(Agent.TempDirectory)/rustup-init.exe
      $(Agent.TempDirectory)/rustup-init.exe -y --default-toolchain nightly-x86_64-pc-windows-msvc

- task: PowerShell@2
  displayName: 'Build'
  inputs:
    targetType: 'inline'
    script: echo $env:Path;cd openpal3; cargo build --release --verbose

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'tree /f C:\Rust\.cargo\git\checkouts'
  condition: always()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'openpal3/target/release/openpal3.exe'
    ArtifactName: 'openpal3'
    publishLocation: 'Container'
