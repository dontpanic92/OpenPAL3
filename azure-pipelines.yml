# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pr:
  - master

pool:
  vmImage: 'windows-latest'

steps:
- task: PowerShell@2
  displayName: 'Install choco'
  inputs:
    targetType: 'inline'
    script: 'Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(''https://chocolatey.org/install.ps1''))'

- task: PowerShell@2
  displayName: 'Install dependencies'
  inputs:
    targetType: 'inline'
    script: |
      choco install vulkan-sdk

- task: PowerShell@2
  displayName: 'Install rust'
  inputs:
    targetType: 'inline'
    errorActionPreference: continue
    script: |
      Invoke-WebRequest https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile $(Agent.TempDirectory)/rustup-init.exe
      $(Agent.TempDirectory)/rustup-init.exe -y --default-toolchain nightly-x86_64-pc-windows-msvc
      & rustup default nightly-x86_64-pc-windows-msvc 2>&1 | %{ "$_" }

- task: PowerShell@2
  displayName: 'Build'
  inputs:
    targetType: 'inline'
    errorActionPreference: continue
    script: |
      $vulkanSdkVersion = (choco list vulkan-sdk  -lr | Select -Index 1).Split("|") | Select -Index 1
      $env:Path += ";C:\VulkanSDK\${vulkanSdkVersion}\Bin"
      cd openpal3
      & cargo build --release 2>&1 | %{ "$_" }

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'openpal3/target/release/openpal3.exe'
    ArtifactName: 'openpal3'
    publishLocation: 'Container'
